name: YTB Tracker - Main Process

on:
    workflow_dispatch:
        inputs:
            logLevel:
                description: 'Log level'
                required: true
                default: 'warning'

    schedule:
        -   cron: "0 8 * * *"  # Runs at 8:00 AM UTC, which aligns with midnight PST outside of daylight saving time

jobs:
    build-linux:
        name: youtube-automation
        runs-on: ubuntu-latest

        permissions:
            contents: write
            id-token: write

        env:
            CREDS_B64: '${{ secrets.CREDS_B64 }}'
            GITHUB_REPOSITORY: '${{ github.GITHUB_REPOSITORY }}'
            PAT: '${{ secrets.PAT }}'

        steps:
            -   id: check-event
                name: Check Trigger Event
                run: |
                    # Check if the event is 'schedule' or 'workflow_dispatch'
                    if [ "${{ github.event_name }}" == "schedule" ]; then
                      echo "This is a scheduled run. Performing the midnight PST check."
                      echo "proceed_with_check=true" >> $GITHUB_ENV
                    else
                      echo "This is a manual run. Skipping the midnight PST check."
                      echo "proceed_with_check=false" >> $GITHUB_ENV
                    fi

            -   id: set-up-tz
                name: Set Up Timezone
                if: env.proceed_with_check == 'true'
                run: |
                    # Install timezone data and set the timezone to America/Los_Angeles
                    sudo apt-get update && sudo apt-get install -y tzdata
                    export TZ="America/Los_Angeles"
                    echo "Timezone set to America/Los_Angeles" 

            -   id: wait-0000-pst
                name: Wait Until Midnight PST
                if: env.proceed_with_check == 'true'
                run: |
                    while true; do
                      # Get the current hour and minute in the specified timezone
                      current_hour=$(date +'%H')
                      current_minute=$(date +'%M')
                    
                      # Check if the current time is midnight or past midnight
                      if [ "$current_hour" -eq "00" ] && [ "$current_minute" -eq "00" ]; then
                        echo "It's midnight PST! Proceeding with the task."
                        break
                      elif [ "$current_hour" -gt "00" ] || ([ "$current_hour" -eq "00" ] && [ "$current_minute" -gt "00" ]); then
                        echo "The current time is past midnight PST. Proceeding without waiting."
                        break
                      else
                        echo "It's not midnight PST yet. Current time: $current_hour:$current_minute. Waiting..."
                        sleep 60 # Wait for 1 minute before checking again
                      fi
                    done

            -   id: tz-reset
                name: Reset Timezone to UTC
                if: env.proceed_with_check == 'true'
                run: |
                    export TZ="UTC"
                    echo "Timezone reset to UTC"

            -   id: git-checkout
                name: Checkout repository
                uses: actions/checkout@v4

            -   id: python-setup
                name: Set up Python 3.11
                uses: actions/setup-python@v5
                with:
                    python-version: '3.11'

            -   id: dependencies
                name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt

            -   id: flake8
                name: Lint with flake8
                run: |
                    pip install flake8
                    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            -   id: main
                name: Main process execution
                run: |
                    cd src
                    python main.py 'action'
                    cd ../

            -   id: commit
                name: Commit changes (Log and historical data)
                run: |
                    git config --local user.email "action@github.com"
                    git config --local user.name "github-actions"
                    git commit -m "log: Latest execution report." -a

            -   id: push
                name: Push changes
                uses: ad-m/github-push-action@master
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    force: true
